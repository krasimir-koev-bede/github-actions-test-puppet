name: Puppet Version Bump

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment in the format <region3><client3><env4> (10 characters, no separators)'
        required: true
      version:
        description: 'Version in format x.y.z.w (separators "." or "-")'
        required: true

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.BUMP_TOKEN }}
          fetch-depth: 0

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Parse inputs
        shell: bash
        run: |
          set -euxo pipefail
          # Expect environment as 10 chars: region(3)client(3)env(4)
          env_str="${{ inputs.environment }}"
          echo "> [Debug] raw environment: '$env_str'"
          region="${env_str:0:3}"
          client="${env_str:3:3}"
          ENV_NAME="${env_str:6:4}"
          echo "> [Debug] parsed region: '$region', client: '$client', env: '$ENV_NAME'"
          echo "REGION=$region" >> $GITHUB_ENV
          echo "CLIENT=$client" >> $GITHUB_ENV
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV
          echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV

      - name: Update puppetVersionEnvOverride in client-region-env file
        shell: bash
        run: |
          file="values/$CLIENT/$REGION/$ENV_NAME.yaml"
          echo "> [Info] Updating $file with version $VERSION"
          echo "> [Debug] exists? $file -> $( [[ -f $file ]] && echo yes || echo no )"
          if [[ -f "$file" ]]; then
            yq eval -i ".puppetVersionEnvOverride |= with_entries(.value = strenv(VERSION))" "$file"
          fi

      - name: Update puppetVersionEnvOverride in client-env file
        shell: bash
        run: |
          file="values/$CLIENT/$ENV_NAME.yaml"
          echo "> [Info] Updating $file with version $VERSION"
          echo "> [Debug] exists? $file -> $( [[ -f $file ]] && echo yes || echo no )"
          if [[ -f "$file" ]]; then
            yq eval -i ".puppetVersionEnvOverride |= with_entries(.value = strenv(VERSION))" "$file"
          fi

      - name: Update puppetVersion in proxy.yaml
        shell: bash
        run: |
          file="values/proxy.yaml"
          echo "> [Info] Updating $file with version $VERSION"
          echo "> [Debug] exists? $file -> $( [[ -f $file ]] && echo yes || echo no )"
          if [[ -f "$file" ]]; then
            yq eval -i ".puppetVersion = strenv(VERSION)" "$file"
          fi

      - name: Show git diff of changes
        shell: bash
        run: |
          echo "> [Info] Showing changes"
          git diff --color=always values/proxy.yaml values/$CLIENT/$REGION/$ENV_NAME.yaml values/$CLIENT/$ENV_NAME.yaml || true

      - name: Create branch
        shell: bash
        run: |
          BRANCH="puppet-version-bump-$REGION-$CLIENT-$ENV_NAME-$VERSION"
          echo "> [Info] creating branch '$BRANCH'"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"

      - name: Commit and push changes
        shell: bash
        run: |
          # update remote URL to use BUMP_TOKEN for push
          git add values/proxy.yaml values/$CLIENT/$REGION/$ENV_NAME.yaml values/$CLIENT/$ENV_NAME.yaml || true
          git commit -m "[Minor][FAB-000] Puppet version bump $REGION-$CLIENT-$ENV_NAME-$VERSION"
          git remote set-url origin https://x-access-token:${{ secrets.BUMP_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:$BRANCH

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.BUMP_TOKEN }}
          commit-message: "[Minor][FAB-000] Puppet version bump $REGION-$CLIENT-$ENV_NAME-$VERSION"
          branch: "puppet-version-bump-$REGION-$CLIENT-$ENV_NAME-$VERSION"
          title: "[Minor][FAB-000] Puppet version bump $REGION-$CLIENT-$ENV_NAME-$VERSION"
          body: |
            This PR bumps the Puppet version to `${{ inputs.version }}` for environment `${{ inputs.environment }}`.
